// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id              String   @id @default(uuid())
  name            String
  email           String   @unique
  profile_picture String?
  role            String?
  createdAt       DateTime @default(now())
  isApproved      Boolean  @default(false)

  notifications Notification[]
  categories    Category[]
  subcategories Subcategory[]
  products      Product[]
}

model Notification {
  id          String   @id @default(uuid())
  title       String
  description String
  createdAt   DateTime @default(now())

  admin   Admin?  @relation(fields: [adminId], references: [id])
  adminId String?
}

model Category {
  id          String   @id @default(uuid())
  title       String
  description String?
  image       String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())

  admin   Admin?  @relation(fields: [adminId], references: [id])
  adminId String?

  subcategories Subcategory[]
}

model Subcategory {
  id          String   @id @default(uuid())
  title       String
  description String?
  image       String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())

  category   Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String?

  admin   Admin?  @relation(fields: [adminId], references: [id])
  adminId String?

  products Product[]
}

model Product {
  id          String   @id @default(uuid())
  description Json?
  image       String[]
  price       Float
  warranty    Int
  quantity    Int
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())

  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)
  subcategoryId String?

  admin   Admin?  @relation(fields: [adminId], references: [id])
  adminId String?
}
